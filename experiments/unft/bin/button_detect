#!/usr/bin/python3
#
# License: CC0 (https://creativecommons.org/publicdomain/zero/1.0/)
#
# To the extent possible under law, all copyright and related or neighboring rights are waived
# on this file.
# This work is published from: United States.
#


import os
import RPi.GPIO as GPIO
import datetime
import time

BUTTON_STATE_FILE = os.path.join( os.environ['HOME'], "config", "button.state")

BUTTON_PIN = 23

SLEEPY = 0.05
RATE_LIMIT = 5.0

def button_callback(channel):
  dt = datetime.datetime.today()
  dt_fmt = str(dt.strftime("%Y-%m-%d %H:%M:%S"))

  print("# [" + str(dt_fmt) + "]: button_detect: push")

  with open(BUTTON_STATE_FILE + ".tmp", "w") as fp:
    fp.write("push " + str(dt.strftime("%Y-%m-%d %H:%M:%S")) + "\n")
  os.rename(BUTTON_STATE_FILE + ".tmp", BUTTON_STATE_FILE)

GPIO.setwarnings(False)

#GPIO.setmode(GPIO.BOARD)
GPIO.setmode(GPIO.BCM)

GPIO.setup(BUTTON_PIN, GPIO.IN, pull_up_down=GPIO.PUD_DOWN)
GPIO.add_event_detect(BUTTON_PIN, GPIO.RISING,callback=button_callback)

#message = input("Press enter to quit\n\n")

t_now = time.time()
t_prev = time.time()
try:
  while True:
    dt = datetime.datetime.today()
    dt_fmt = str(dt.strftime("%Y-%m-%d %H:%M:%S"))

    t_now = time.time()
    if (t_now - t_prev) > RATE_LIMIT:
      print("# [" + str(dt_fmt) +"]: button_detect: sleep")
      t_prev = t_now

    time.sleep(SLEEPY)

except KeyboardInterrupt:
  dt = datetime.datetime.today()
  dt_fmt = str(dt.strftime("%Y-%m-%d %H:%M:%S"))
  print("# [" + str(dt_fmt) + "]: button_detect: finishing")

GPIO.cleanup()
