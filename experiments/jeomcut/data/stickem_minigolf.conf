{
  "unit": [1,0.5,1],
  "unit_center": [0, 0.25, 0],
  "_unit": [1,1,1],
  "_unit_center": [0, 0.5, 0],
  "up":[0,1,0],
  "symmetry": "y",
  "dock_slice": 0.03125,
  "dock_threshold": 0.95,
  "point_similarity_threshold": 0.95,
  "eps": 0.00097656250000000000,

  "_direction_index_map" : [ "x+", "x-", "y+", "y-", "z+", "z-" ],

  "_notes": [
    "[ \"block\", \"block\", 4 ], is redudant as it's taken care by symmetry from block-block-0",
    "dock_exemplar assumes same orientation. So block_000 w/ block_000",

    "block,block x+(0) : should take care of red walls in xz plane (rot around y)",
    "block,. y+(0) : empty space above block",
    "open,open x+(0) : should take care of green in xz plance (rot around y)",
    "inner-corner,walls-to-open x+(0) : should take care of single red wall post (xz)",
    "straight,straight z+(4) : double walls on green (xz)",
    "support,support y+(2) : (single) support can stack in y+ direction",
    "supports,supports y+(2) : (4) supports can stack in y+ direction",
    "support-bottom,_ y-(3) : (single) support base needs to be above ground level (_)",
    "supports-bottom,_ y-(3) : (4) supports base needs to be above ground level (_)",
    "gap,. y-(3) : special consideration for gap, needs to have empty space below it",

    "note: we're going to need to do more with the dock exemplars to get all the rules we want.",
    "the inner-corner has handedness so we'll need to at least take care of the other configuration but",
    "we're also going to need to take care of the ramps etc. which will span multiple units.",
    "we're bagging on the split (simple) tiles as they 'should' work but we want to keep things reasonable for now to test."
  ],

  "_dock_note": [
    "dock tokens should not be confused with actual tlies, they are tokens seperate from tiles that denote which",
    "tiles can match up together.",
    "dock 'type' below has the following meaning:",
    "  '@'    simple dock. Match up to others with same docking token",
    "  '%'    multi, convenience code to encapsulate multiple docking tokens with one. As if it were replaced with its docking subtokens",
    "  '!'    forced, match only to tile as listed",
    ""
  ],

  "dock" : {
    "." : { "type":"!", "tile": [0], "description" : "empty space (.)" },
    "#" : { "type":"!", "tile": [1], "description" : "ground (#)" },
    "_" : { "type":"%", "dock":"O o X x . #","description" : "(y) ground, support(s)  or empty (. #)" },
    ":" : { "type":"%", "dock":"O o X x #", "description" : "(y) only ground or support(s) (O o X x #)" },
    "q" : { "type":"%", "dock":". # W O o X x", "description" : "(xz) ..." },

    "-" : { "type":"@", "description" : "(xz) green open                        (-------)" },
    "=" : { "type":"@", "description" : "(xz) green with red walls              (W-----W)" },
    "L" : { "type":"@", "description" : "(xz) left corner (wall), right open    (W------) (looking into tile)" },
    "R" : { "type":"@", "description" : "(xz) right corner (wall), left open    (------W) (looking into tile)" },
    "E" : { "type":"@", "description" : "(xz) three (red) wall split over green (W--W--W)" },
    "e" : { "type":"@", "description" : "(xz) three (red) wall split over green (W--w--W) start (unneeded?)" },
    "W" : { "type":"@", "description" : "(xz) red wall                          (WWWWWWW)" },

    "[" : { "type":"@", "description" : "(xz) left half red wall               (WWWW--W)" },
    "]" : { "type":"@", "description" : "(xz) right half red wall              (W--WWWW)" },

    "O" : { "type":"@", "description" : "(y) support base" },
    "o" : { "type":"@", "description" : "(y) support" },
    "X" : { "type":"@", "description" : "(y) supports base" },
    "x" : { "type":"@", "description" : "(y) support" },

    "&" : { "type":"@", "description" : "null" }
  },

  "tile" : {

    "0" : { "name":"0", "description":"empty",
            "dock": [ ". * _",
                      ". * _",
                      ". * _",
                      ". * _",
                      ". * _",
                      ". * _" ] },

    "1" : { "name":"1", "description":"ground",
            "dock": [ ". #",
                      ". #",
                      ". # O X",
                      "#",
                      ". #",
                      ". #" ] }

  },


  "source.test0": [
    { "name":"straight",        "dock":[["W .", "W .", ".",   ":",   "=",   "="]] },
    { "name":"end",             "dock":[["W .", "W .", ".",   ":", "W .",   "="]] }
  ],

  "source": [
    { "name":"block",           "dock":[["W",     "W",   ".",   "_",   "W",   "W"]] },
    { "name":"bump",            "dock":[["-",     "-",   ".",   "_",   "-",   "-"]] },
    { "name":"bump-down",       "dock":[["-",     "-",   ".",   "_",   "-",   "-"]] },
    { "name":"bump-down-walls", "dock":[["W .", "W .",   ".",   "_",   "=",   "="]] },
    { "name":"bump-walls",      "dock":[["W .", "W .",   ".",   "_",   "=",   "="]] },
    { "name":"castle",          "dock":[["W .", "W .",   ".",   "_",   "=",   "="]] },
    { "name":"corner",          "dock":[["W .",   "R",   ".",   "_", "W .",   "L"]] },
    { "name":"crest",           "dock":[["W .", "W .",   ".",   "_",   "=",   "="]] },

    { "name":"end",             "dock":[["W .", "W .",   ".",   "_", "W .",   "="]] },

    { "name":"gap",             "dock":[["W .", "W .",   ".",   ".",   "=",   "="]] },
    { "name":"hill-corner",     "dock":[["W .",   "R",   ".",   "_", "W .",   "L"]] },
    { "name":"hill-round",      "dock":[["W .", "W .",   ".",   "_",   "-",   "-"]] },
    { "name":"hill-square",     "dock":[["W .", "W .",   ".",   "_",   "-",   "-"]] },
    { "name":"hole-open",       "dock":[["-",     "-",   ".",   ".",   "-",   "-"]] },
    { "name":"hole-round",      "dock":[[".",     ".",   ".",   ".",   ".",   "="]] },
    { "name":"hole-square",     "dock":[["W .", "W .",   ".",   ".", "W .",   "="]] },
    { "name":"inner-corner",    "dock":[["R",     "-",   ".",   "_",   "-",   "L"]] },

    { "name":"narrow-block",    "dock":[["W .", "W .",   ".",   "_",   "=",   "="]] },
    { "name":"narrow-round",    "dock":[["W .", "W .",   ".",   "_",   "=",   "="]] },
    { "name":"obstacle-block",  "dock":[[  "-",   "-",   ".",   "_",   "=",   "="]] },

    { "name":"obstacle-diamond","dock":[[  "-",   "-",   ".",   "_",   "-",   "-"]] },
    { "name":"obstacle-triangle",
                                "dock":[[  "-",   "-",   ".",   "_",   "-",   "-"]] },

    { "name":"open",            "dock":[[  "-",   "-",   ".",   "_",   "-",   "-"]] },

    { "name":"ramp",            "dock":[[".",     ".",  "$1", ". #",   "q",   "="],
                                        [".",     ".",   ".",  "$0",   "=",   "q"]],
                                "d_cell": [[0,0,0], [0,1,0]] },

    { "name":"ramp-large",      "dock":[[".",   ".",   ".", ". #",  "$1",  "="],
                                        [".",   ".",  "$2", ". #",   "q", "$0"],
                                        [".",   ".",   ".",  "$1",   "=",  "."]],
                                "d_cell":[[0,0,0], [0,0,1], [0,1,1]] },

    { "name":"ramp-sharp",      "dock":[["W .", "W .",   ".",   "_",   "-",   "-"]] },
    { "name":"ramp-square",     "dock":[["W .", "W .",   ".",   "_",   "-",   "-"]] },
    { "name":"round-corner-a",  "dock":[[  ".",   "=",   ".", ". #",   ".",   "="]] },
    { "name":"round-corner-b",  "dock":[[  "W",   "=",   ".",   "_",   "W",   "="]] },
    { "name":"round-corner-c",  "dock":[[  ".",   "R",   ".", ". #",   ".",   "L"]] },

    { "name":"round-large-corner",
                                "dock":[ ["$1",   "=",   ".", ". #",   ".",   "$2"],
                                         ["q",   "$0",   ".", ". #",   "q",   "$3"],
                                         ["$3",   "q",   ".", ". #",   "$0",   "q"],
                                         [ "q",  "$2",   ".", ". #",   "$1",   "="]],
                                "d_cell": [[0,0,0], [1,0,0], [0,0,-1], [1,0,-1]] },

    { "name":"round-large-corner-open",
                                "dock":[ ["$1",   "R",   ".", ". #",   ".",   "$2"],
                                         ["q",   "$0",   ".", ". #",   "q",   "$3"],
                                         ["$3",   "-",   ".", ". #",   "$0",   "-"],
                                         [ "q",  "$2",   ".", ". #",   "$1",   "L"]],
                                "d_cell": [[0,0,0], [1,0,0], [0,0,-1], [1,0,-1]] },

    { "name":"side",            "dock":[["W .",   "-",   ".",   "_",   "R",   "L"]] },
    { "name":"skew-corner",     "dock":[[".",   "=",   ".",   ".",   ".",   "="]] },
    { "name":"skew-large-corner",
                                "dock":[[".",   "=",   ".", ". #",   ".",   "$1"],
                                        ["$2",  "q",   ".", ". #",   "$0",   "q"],
                                        ["q",   "$1",  ".", ". #",   ".",    "="] ],
                                "d_cell":[[0,0,0], [0,0,-1], [1,0,-1]] },

    { "name":"skew-large-corner-open",
                                "dock":[[".",   "R",   ".", ". #",   ".",   "$1"],
                                        ["$2",  "-",   ".", ". #",   "$0",  "-"],
                                        ["-",   "$1",  ".", ". #",   ".",   "L"] ],
                                "d_cell":[[0,0,0], [0,0,-1], [1,0,-1]] },

    { "name":"split",           "dock":[["W .", "W .",   ".",   "_",   "E",   "E"]] },
    { "name":"split-start",     "dock":[["W .", "W .",   ".",   "_",   "E",   "="]] },
    { "name":"split-t",         "dock":[["=",   "=",   ".",   "_", "W .",   "="]] },
    { "name":"split-walls-to-open",
                                "dock":[["R",   "L",   ".",   "_",   "-",   "E"]] },

    { "name":"square-corner-a", "dock":[[".",   "=",   ".",   "_",   ".",   "="]] },
    { "name":"start",           "dock":[[".",   ".",   ".",   "#",   ".",   "="]] },
    { "name":"straight",        "dock":[["W .", "W .",   ".",   "_",   "=",   "="]] },

    { "name":"support",         "dock":[["q",   "q",   "$1",  "o O", "q",   "q"],
                                        ["q",   "q",   "o",    "$0", "q",   "q"] ],
                                "d_cell":[[0,0,0],[0,1,0]] },

    { "name":"support-bottom",  "dock":[["q",   "q",   "$1",  "#",   "q",   "q"],
                                        ["q",   "q",   "O",  "$0",   "q",   "q"] ],
                                "d_cell":[[0,0,0],[0,1,0]] },

    { "name":"supports",        "dock":[["q",   "q",   "$1",  "x X", "q",   "q"],
                                        ["q",   "q",   "x",    "$0", "q",   "q"] ],
                                "d_cell":[[0,0,0],[0,1,0]] },

    { "name":"supports-bottom", "dock":[["q",   "q",   "$1",   "#",   "q",   "q"],
                                        ["q",   "q",   "X",   "$0",   "q",   "q"] ],
                                "d_cell":[[0,0,0],[0,1,0]] },

    { "name":"tunnel-double",   "dock":[["W .", "W .",   ".",   "_",   "=",   "="]] },
    { "name":"tunnel-narrow",   "dock":[["W .", "W .",   ".",   "_",   "=",   "="]] },
    { "name":"tunnel-wide",     "dock":[["W .", "W .",   ".",   "_",   "=",   "="]] },

    { "name":"wall-left",       "dock":[["W .", "W .",   ".",   "_",   "=",   "["]] },
    { "name":"wall-right",      "dock":[["W .", "W .",   ".",   "_",   "=",   "]"]] },
    { "name":"walls-to-open",   "dock":[[  "R",   "L",   ".",   "_",   "-",   "="]] },
    { "name":"windmill",        "dock":[["W .", "W .",   ".",   "_",   "=",   "="]] }
  ],


  "excluded": [
    "ramp-a", "ramp-b", "ramp-c", "ramp-d",
    "ramp-side", "ramp-large-side"
  ]

}
