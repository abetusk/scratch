#!/usr/bin/python3
#
# To the extent possible under law, the person who associated CC0 with
# this project has waived all copyright and related or neighboring rights
# to this project.
# 
# You should have received a copy of the CC0 legalcode along with this
# work.  If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.
#

# A simple program to output 'singing' xml for festival
#
# Example usage:
#
# text2wave -eval '(voice_us1_mbrola)' -mode singing <( ./singsay-xml -b 80 "hello friend." )  -o hello.wav ; mplayer hello.wav  
#

# Note that this is a work in progress.
# Currently only supoprts a fixed set of random syllable lengths and note distribution
#

import sys
import re
import syllables
import random
import getopt

BPM=80

SPEEDUP = 1.0
SPEEDUP = 1.0/1.125

def usage():
  print("...")

try:
  opts, args = getopt.getopt(sys.argv[1:], "h:b:", ["help" ])
except getopt.GetoptError as err:
  # print help information and exit:
  print(str(err))
  usage()
  sys.exit(2)
output = None
verbose = False
for o, a in opts:
  if o == "-b":
    BPM = float(a)
  elif o in ("-h", "--help"):
    usage()
    sys.exit(-1)
  else:
    assert False, "unhandled option"

#sent="Hello there daisy, friend, how are you?"
sent = ""
if len(args)>0:
  sent  = args[0]


HDR = """<?xml version="1.0"?>
<!DOCTYPE SINGING PUBLIC "-//SINGING//DTD SINGING mark up//EN" "Singing.v0_1.dtd" []>
"""
HDR += '<SINGING BPM="' + str(BPM) + '">\n'
FTR = '<REST BEATS="1.0"></REST>\n</SINGING>'


def rbeat():

  dv = 1.0/8.0
  dp = (1.0 + (1.0/8.0))
  dn = (1.0 - (1.0/8.0))

  v = [ 0.33, 0.5, 0.66, 0.75, 1.0, 1.125 ]
  v = [ 0.55, 0.66, 0.75, 1.0, 1.125 ]
  v = [  0.75, 1.0, 1.125 ]
  #v = [  dn*dn*dn, dn*dn, dn, 1.0, dp, dp*dp, dp*dp*dp ]
  #v = [  dn*dn, dn, 1.0, dp, dp*dp ]
  v = [ 1.0, dp, dp*dp, dp*dp*dp ]

  for idx in range(len(v)):
    v[idx] *= SPEEDUP

  return random.choice(v)

def rpitch():
  #v = ["A2", "Bb2", "C3", "D3", "Eb3", "F2", "F3", "G2" ]
  #v = ["A3", "Bb3", "C4", "D4", "Eb4", "F3", "F4", "G3" ]

  #     0      1     3     5      6     -4    8     -2  locrian?
  v = ["A4", "Bb4", "C5", "D5", "Eb5", "F4", "F5", "G4" ]

  #     0      1     8     10    15(3) 17(5)  18(6) 20(8)
  v = ["A4", "Bb4", "F4", "G4", "C5", "D5", "Eb5", "F5" ]

  #      0     2     3     5     7     -4    8     -2  aeolian
  v = ["A4", "B4", "C5", "D5", "F5", "F4", "F5", "G4" ]

  #      0     2     4     5     7     -4    8     -2  mixolydian
  v = ["A4", "B4", "Db4", "D5", "F5", "F4", "F5", "G4" ]

  # mixolydian [ 0,2,4,5,7,9,10]
  #      0     2      4     5     7      9     10    12(0)  14(2)  16(4) 17(5)
  v = ['A4', 'B4', 'Db5', 'D5', 'E5', 'Gb5', 'Gb4', 'G4']


  # aeolian?
  #v = ['C3', 'D3', 'D#3', 'F3', 'G3', 'G#3', 'A#4']
  # ionian?
  #v = ['C3', 'D3', 'E3', 'F3', 'G3', 'A4', 'B4' ]
  return random.choice(v)


def sent2singxml(sent, info):
  toks = re.split('  *', sent)

  lines = []

  REST_LEN = 0.75
  REST = '<REST BEATS="' + str(REST_LEN) + '"></REST>'

  for tok in toks:
    beat = [ 0.66 ]
    pitch = [ "A3" ]
    

    m = syllables.estimate(tok)

    beats = []
    pitches = []
    for idx in range(m):
      beats.append( rbeat() )
      pitches.append( rpitch() )

    xml_line = '<DURATION '
    xml_line += 'BEATS="' + ",".join(list(map(str,beats))) + '"'
    xml_line += '>'

    xml_line += '<PITCH '
    xml_line += 'NOTE="' + ",".join(list(map(str,pitches))) + '"'
    xml_line += '>'

    xml_line += tok

    xml_line += '</PITCH></DURATION>'
    lines.append(xml_line)

    if re.search( '\.', tok):
      lines.append( REST )

  return "\n".join(lines)




o = sent2singxml(sent, {})

print(HDR)
print(o)
print(FTR)


